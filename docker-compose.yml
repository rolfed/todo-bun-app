version: '3.1'

services:
  # Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    environment:
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Jaeger Service
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "14268:14268"
    depends_on:
      elasticsearch:
        condition: service_healthy

  # PostgreSQL Database Service
  db:
    build:
      context: ./
      dockerfile: ./docker/postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - ${HOST_DB_PORT}:${DB_PORT}
    volumes:
      - ./initdb/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data

  # Adminer Service
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  elasticsearch-data:
    driver: local
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOCAL_DB_PATH}/postgres-data

